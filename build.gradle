plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'

	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

def ENV = System.getenv()

loom {
	splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.architectury.dev" }
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url "https://api.modrinth.com/maven" }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'https://maven.terraformersmc.com/releases' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	mappings loom.layered {
		//it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${rootProject.minecraft_version}+build.${rootProject.quilt_mappings}:v2"))
		// https://lambdaurora.dev/tools/import_quilt.html
		it.officialMojangMappings {
			setNameSyntheticMembers(false)
		}
	}

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// LuckPerms
	modImplementation(include("me.lucko:fabric-permissions-api:${project.permissions_version}"))
	modImplementation(include("xyz.nucleoid:server-translations-api:${project.translations_version}"))

	// Allows in game config editing
	modImplementation(include("com.github.samolego:Config2Brigadier:${project.c2b_version}"))

	modCompileOnly("eu.pb4:polymer-core:${project.polymer_version}")
	modCompileOnly("eu.pb4:polymer-virtual-entity:${project.polymer_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		mavenLocal()
	}
}

// from FAPI https://github.com/FabricMC/fabric/blob/1.16/build.gradle
curseforge {
	if (ENV.CURSEFORGE_API_KEY) {
		apiKey = ENV.CURSEFORGE_API_KEY
	}

	project {
		id = "466750"
		changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/HealthCare/releases/tag/${version}"
        releaseType = "release"
        if (project.minecraft_version.contains("-")) {
            // yuck
            addGameVersion "${project.minecraft_version.split("-")[0]}-Snapshot"
        } else {
            addGameVersion "${project.minecraft_version}"
        }
        addGameVersion "Fabric"
        addGameVersion "Quilt"

        mainArtifact(remapJar.archiveFile) {
            displayName = "[${project.minecraft_version}] HealthCare ${version}"
        }

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
	}

	options {
		forgeGradleIntegration = false
	}
}

modrinth {
	token = ENV.MODRINTH_TOKEN
	projectId = "NNqujQWr"
    changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/HealthCare/releases/tag/${version}"
    versionNumber = version
    versionName = "[${project.minecraft_version}] HealthCare ${version}"
    versionType = "release"

    uploadFile = remapJar.archiveFile

    gameVersions = [project.minecraft_version]
    loaders = ['fabric', 'quilt']

	dependencies { // A special DSL for creating dependencies
		required.project "fabric-api" // Creates a new required dependency on Fabric API
	}
}
